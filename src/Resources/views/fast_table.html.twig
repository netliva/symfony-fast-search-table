<div id="fastTableApp_{{ key }}" style="display: none;">
	<form class="d-flex align-items-center justify-content-center pad10A p-3" @submit="postFilter">
		{% for filterKey, filterInfo in entityInfos.filters %}
			{% if filterInfo.type == 'hidden' %}
				<input type="hidden" v-model="filter_form.{{ filterKey }}">
			{% else %}
				<div id="fastTableApp_{{ key }}_filter_{{ filterKey }}" class="d-flex align-items-center justify-content-center">
					<strong class="nowrap">{{ filterInfo.title }} :</strong>
					{% if filterInfo.type == 'text' %}
						<input class="{{ default_input_class }} {{ filterInfo.input_class }}" v-model="filter_form.{{ filterKey }}">
					{% elseif filterInfo.type == 'date_range' %}
						<input type="date" class="{{ default_input_class }} {{ filterInfo.input_class }}" v-model="filter_form.{{ filterKey }}.from"> -
						<input type="date" class="{{ default_input_class }} {{ filterInfo.input_class }}" v-model="filter_form.{{ filterKey }}.to">
					{% elseif filterInfo.type == 'select' %}
						<select class="{{ default_input_class }} {{ filterInfo.input_class }}" v-model="filter_form.{{ filterKey }}">
							<option value="null">Farketmez</option>
							{% for key, val in (options.custom_filter_options[filterKey] ?? filterInfo.options) %}
								<option value="{{ key }}">{{ val }}</option>
							{% endfor %}
						</select>
					{% endif %}
				</div>
			{% endif %}
		{% endfor %}
		{% if entityInfos.filters|length %}
			<div>
				<button id="fastTableApp_{{ key }}_filter_submit" class="btn btn-success" @click="postFilter">Filtrele</button>
			</div>
		{% endif %}
		<div>
			<strong>Toplam Kayıt : &nbsp;</strong>
			<span v-if="all_count==total || !{{ options.show_count_with_total?1:0 }}">[[new Intl.NumberFormat('tr-TR', {maximumFractionDigits:2 }).format(total)]]</span>
			<span v-else><sup>[[new Intl.NumberFormat('tr-TR', {maximumFractionDigits:2 }).format(total)]]</sup>/<sub>[[new Intl.NumberFormat('tr-TR', {maximumFractionDigits:2 }).format(all_count)]]</sub></span>
		</div>
		<div>
			<button class="btn btn-secondary btn-xs" style="height:34px; line-height:1.2;" @click="clearCache">
				Ön Belleği<br>Temizle
			</button>
		</div>
	</form>


	<table class="{{ options.table_class }}">
		<thead>
			<tr :class="'nl-sort-'+sort_direction">
				{% for column in options.table_columns %}
					<th {% if column.releated_field is defined and column.releated_field %} class="nl-sort" :class="{'nl-sort-active': sort_field=='{{ column.releated_field }}'}" @click="sortTable('{{ column.releated_field }}')"{% endif %}>
						<span>{{ column.title }}</span>
					</th>
				{% endfor %}
			</tr>
		</thead>
		<tbody>
			{#  ---  Cache temizlenip, yeniden oluşturulurken  ---  #}
			<template v-if="cache_creating">
				<tr>
					<td colspan="{{ options.table_columns|length }}">
						<div style="padding: 50px; text-align: center;">
							Veriler Yeniden Oluşturuluyor...
							<br />
							[['%'+cache_creating_percent+' oluşturuldu']]
						</div>
					</td>
				</tr>
			</template>

			{#  ---  Veriler Yüklenirken  ---  #}
			<template v-if="(entities.length==0 && in_action) || cache_creating">
				<tr v-for="i in 10">
					{% for i in 1..(options.table_columns|length) %}
						<td>
							<div class="placeholder-item"></div>
						</td>
					{% endfor %}
				</tr>
			</template>

			{#  ---  Kayıt Bulunamadığında  ---  #}
			<template v-if="entities.length==0 && !in_action && !cache_creating">
				<tr>
					<td colspan="{{ options.table_columns|length }}">
						<div style="padding: 50px; text-align: center;">
							Hiç Kayıt Bulunamadı!
						</div>
					</td>
				</tr>
			</template>

			{#  ---  Kayıtların Listelenmesi  ---  #}
			<template v-if="!cache_creating" v-for="{{ options.record_variable_name }} in entities">
				<tr :id="'fastTableApp_{{ key }}_'+{{  options.record_variable_name  }}.id" :data-id="{{  options.record_variable_name  }}.id">
					{{ options.table_tbody_cells_vue_template|raw }}
				</tr>
			</template>

			{#  ---  Kayıt Varken ve Veriler Yüklenirken  ---  #}
			<template v-if="entities.length>0 && in_action">
				<tr v-for="i in 3">
					{% for i in 1..(options.table_columns|length) %}
						<td>
							<div class="placeholder-item"></div>
						</td>
					{% endfor %}
				</tr>
			</template>

		</tbody>
	</table>

	<div v-if="entities.length>0 && loaded_all_records">
		<div style="padding: 50px; text-align: center;">
			Tüm Kayıtlar Listelendi!
		</div>
	</div>

</div>


<style>
	#fastTableApp_{{ key }} thead th.nl-sort { cursor: pointer; white-space: nowrap; }
	#fastTableApp_{{ key }} thead th.nl-sort span:before,
	#fastTableApp_{{ key }} thead th.nl-sort span:after {border: 4px solid transparent;content: "";display: block;height: 0;right: 5px;top: 50%;position: absolute;width: 0;}
	#fastTableApp_{{ key }} thead th.nl-sort span:before {border-bottom-color: #666;margin-top: -9px;}
	#fastTableApp_{{ key }} thead th.nl-sort span:after {border-top-color: #666;margin-top: 1px;}
	#fastTableApp_{{ key }} thead tr.nl-sort-desc th.nl-sort.nl-sort-active span:after {border-top-color: #3498DB;}
	#fastTableApp_{{ key }} thead tr.nl-sort-asc th.nl-sort.nl-sort-active span:before {border-bottom-color: #3498DB;}
	#fastTableApp_{{ key }} thead tr.nl-sort-desc th.nl-sort.nl-sort-active span:before,
	#fastTableApp_{{ key }} thead tr.nl-sort-asc th.nl-sort.nl-sort-active span:after {display:none;}
	#fastTableApp_{{ key }} thead th.nl-sort.nl-sort-active span {color: #3498DB;}
	#fastTableApp_{{ key }} thead th.nl-sort:hover span {color: #36739d;}
	#fastTableApp_{{ key }} thead th.nl-sort span {display: block;position: relative;padding-right: 25px;}
	#fastTableApp_{{ key }} form { gap:10px; flex-wrap: wrap; }
	#fastTableApp_{{ key }} form .d-flex { gap:10px; white-space:nowrap; }
	.placeholder-item {border-radius: 4px;height: 17px;position: relative;overflow: hidden;background: #e8e8e8;}
	.placeholder-item::before {content: '';display: block;position: absolute;left: -150px;top: 0;height: 100%;width: 150px;background: linear-gradient(to right, transparent 0%, #f9f9f9 50%, transparent 100%);animation: load 1.5s cubic-bezier(.37,-0.01,.26,1.08) infinite;}
	@keyframes load { from {left: -150px;} to  {left: 100%;} }
</style>

<script type="module">
	{% for key, value in options.components %}
		import {{ key }} from '{{ value }}';
	{% endfor %}
	const { createApp } = Vue
	window.fastTableApp_{{ key }} = createApp({
		delimiters: ["[[", "]]"],
		components: {
			{% for key, value in options.components %}
				{{ key~',' }}
			{% endfor %}
		},
		data ()
		{
			return {
				axiosSource: axios.CancelToken.source(),
				urls : {
					remove_cache:'{{ options.remove_cache_url }}',
					search: '{{ options.search_url }}',
				},
				page: 0,
				scrool_element: 0,
				filter_form: {
					{% for filterKey, filterInfo in entityInfos.filters %}
						{% if filterInfo.type == 'date_range' %}
							{{ (filterKey~':{
								  from: ' ~ (options.filter_values[filterKey].from is defined and options.filter_values[filterKey].from is not null ?'"'~options.filter_values[filterKey].from~'"':'null') ~ ',
								  to: ' ~ (options.filter_values[filterKey].to is defined and options.filter_values[filterKey].to is not null ?'"'~options.filter_values[filterKey].to~'"':'null') ~ '
								},')|raw }}
						{% else %}
							{{ (filterKey~':' ~ (options.filter_values[filterKey] is defined and options.filter_values[filterKey] is not null
													? ( options.filter_values[filterKey] matches '/^[-+]?[0-9]*\\.?[0-9]+$/' ? options.filter_values[filterKey] : '"'~options.filter_values[filterKey]~'"')
													: 'null') ~ ',')|raw }}
						{% endif %}
					{% endfor %}
				},
				entities: [],
				loaded_all_records: false,
				in_action: false,
				cache_creating: false,
				sort_direction: '{{ options.default_sorting_direction??entityInfos.default_sorting_direction }}',
				sort_field: '{{ options.default_sort_field??entityInfos.default_sort_field }}',
				total: 0,
				all_count: 0,
				loaded: 0,
				cacheAxiosController: null,
				clearCacheClick: 0,
				clearCacheTimer: null,
				{% for key, value in options.vue_variables %}
					{{ (key ~ ':'~ (value|json_encode)~',')|raw }}
				{% endfor %}
				{% for key, value in options.js_variables %}
					{{ (key ~ ':'~ value ~',')|raw }}
				{% endfor %}
			}
		},
	  	methods:
		{
			{% for key, value in options.js_methods %}
				{{ (key ~ ':'~ value ~',')|raw }}
			{% endfor %}
			chackAnotherPages ()
			{
				if (!this.scrool_element)
				{
					var findScrollableElement = function (e){
						if (e.scrollHeight > e.clientHeight+5) return e;
						if (e.parentElement)
							return findScrollableElement(e.parentElement);
						return null;
					}
					var e = findScrollableElement(document.getElementById('fastTableApp_{{ key }}'));
					if (e) {
						this.scrool_element = e;
						this.scrool_element.addEventListener('scroll', this.chackAnotherPages);
						 // console.log(this.scrool_element);
					}
				}

				/*
				 if (this.scrool_element)
					 console.log(
						 'scrollHeight : ', this.scrool_element.scrollHeight,
						 '\ncurrentBottom : ', this.scrool_element.clientHeight+this.scrool_element.scrollTop,
						 '\ntoBottom : ', this.scrool_element.scrollHeight - (this.scrool_element.clientHeight+this.scrool_element.scrollTop),
						 '\nclientHeight : ', this.scrool_element.clientHeight,
						 '\nscrollTop : ', this.scrool_element.scrollTop
					 );
				*/

				if (!this.scrool_element || (this.scrool_element.clientHeight+this.scrool_element.scrollTop + 200) >= this.scrool_element.scrollHeight)
				{
					this.getRecords();
				}
			},
			resetList () {
				if (this.axiosSource)
				{
					this.axiosSource.cancel('İptal Edildi');
					this.axiosSource = axios.CancelToken.source();
				}
				this.in_action = false;
				this.loaded_all_records = false;
				this.total = 0;
				this.all_count = 0;
				this.loaded = 0;
				this.page = 0;
				this.getRecords();
			},
			postFilter (event) {
				event.preventDefault();
				this.resetList();
				return false;
			},
			sortTable (targetSortField)
			{
				if (this.sort_field == targetSortField)
					this.sort_direction = this.sort_direction == 'desc' ? 'asc' : 'desc';
				this.sort_field = targetSortField;

				this.resetList();
			},
			clearCache (e)
			{
				e.preventDefault();
				if (this.cache_creating)
					this.cacheAxiosController.abort();

				this.clearCacheClick++
				this.cache_creating_percent = 0;
				this.total = 0;
				this.all_count = 0;
				this.loaded = 0;
				if(this.clearCacheClick === 1) { // tek click ise
					var self = this
					this.clearCacheTimer = setTimeout(function() {
						self.cacheCreate(false);
						self.clearCacheClick = 0
					}, 700);
				} else { // çift click ise
					clearTimeout(this.clearCacheTimer);
					this.cacheCreate(true);
					this.clearCacheClick = 0;
				}
				return false;
			},
			cacheCreate (force)
			{
				this.cache_creating = true;
				this.cacheAxiosController = new AbortController();
				axios
					.post(
						this.urls.remove_cache.replace('__FRC__', force?1:0),
						{}, { signal: this.cacheAxiosController.signal }
					)
					.then( response => {
						console.log('response.data =>', response.data);
						if (response.data.info.complete) {
							this.cache_creating = false;
							this.resetList();
						}
						else
						{
							this.cache_creating_percent = Math.round(100*response.data.info.offset/response.data.info.count);
							console.log('cache_creating_percent =>', this.cache_creating_percent);
							if (this.cache_creating_percent>100) this.cache_creating_percent = 100;
							this.total = response.data.info.offset;
							this.all_count = response.data.info.offset;
							this.cacheCreate(false);
						}
					} ).catch(function (err) {
						console.log('err =>', err);
					});
			},
			getRecords ()
			{
				console.log('in_action:', this.in_action);
				if (this.in_action || this.cache_creating || this.loaded_all_records) return;
				this.in_action = true;

				if (!this.page){
					this.entities = [];
					this.loaded_all_records = false;
				}
				this.page++;

				for (const key in this.filter_form) {
					if (this.filter_form[key] === 'null') this.filter_form[key] = null;
					else if (this.filter_form[key] === 'true') this.filter_form[key] = true;
					else if (this.filter_form[key] === 'false') this.filter_form[key] = false;
				}

				console.log(this.page, '. sayfayı yükle');
				console.log('filters', JSON.parse(JSON.stringify(this.filter_form)));
				axios
					.post(
						this.urls.search.replace('__PAGE__', this.page),
						{
							filters : JSON.parse(JSON.stringify(this.filter_form)),
							sort_field: this.sort_field,
							sort_direction: this.sort_direction,
							post_values: {{ options.post_values|json_encode|raw }},
						},
						{ cancelToken: this.axiosSource.token }
					)
					.then(response => {
						this.total = response.data.total;
						this.all_count = response.data.all_count;
						this.loaded = response.data.loaded;

						if (response.data.records.length > 0)
						{
							this.entities.push(...response.data.records);
							const loadedDataEvent = new CustomEvent("data_loaded", {
								detail: {
									data: response.data.records
								},
								bubbles: true,
								cancelable: true,
								composed: false,
							});
							document.querySelector("#fastTableApp_{{ key }}").dispatchEvent(loadedDataEvent);
						}

						this.in_action = false;
						if (response.data.loaded >= response.data.total)
							this.loaded_all_records = true;
						else
							this.chackAnotherPages();

					});
			},
			filterSearchBox(val, key) {
				console.log(val, key);
			}
		},
	  	computed: {},
		created () { window.addEventListener("scroll", this.chackAnotherPages); },
		destroyed () {
			window.removeEventListener("scroll", this.chackAnotherPages);
			this.scrool_element.removeEventListener("scroll", this.chackAnotherPages);
		},
	  	mounted () {
			this.getRecords();
			document.getElementById('fastTableApp_{{ key }}').style.display = 'block';
		}

	}).mount('#fastTableApp_{{ key }}')
</script>
